<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="static int __always_inline dp_ing_pkt_main (void *md, struct xfi *xf)" startline="31" endline="59">
static int __always_inline dp_ing_pkt_main (void *md, struct xfi *xf)
{
    LL_DBG_PRINTK ("[PRSR] START cpu %d \n", bpf_get_smp_processor_id ());
    LL_DBG_PRINTK ("[PRSR] fi  %d\n", sizeof (*xf));
    LL_DBG_PRINTK ("[PRSR] fm  %d\n", sizeof (xf->fm));
    LL_DBG_PRINTK ("[PRSR] l2m %d\n", sizeof (xf->l2m));
    LL_DBG_PRINTK ("[PRSR] l34m %d\n", sizeof (xf->l34m));
    LL_DBG_PRINTK ("[PRSR] tm  %d\n", sizeof (xf->tm));
    LL_DBG_PRINTK ("[PRSR] qm  %d\n", sizeof (xf->qm));
    if (xf->pm.phit & LLB_DP_FC_HIT) {
        dp_parse_d0 (md, xf, 0);
    }
    if (xf->pm.pipe_act & LLB_PIPE_REWIRE) {
        return dp_rewire_packet (md, xf);
    }
    else if (xf->pm.pipe_act & LLB_PIPE_RDR) {
        return dp_redir_packet (md, xf);
    }
    if (xf->pm.pipe_act & LLB_PIPE_PASS || xf->pm.pipe_act & LLB_PIPE_TRAP) {
        return DP_PASS;
    }
    return dp_ing_slow_main (md, xf);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int xdp_packet_func (struct xdp_md *ctx)" startline="63" endline="79">
int xdp_packet_func (struct xdp_md *ctx)
{
    int z = 0;
    struct xfi *xf;
    LL_FC_PRINTK ("[PRSR] xdp start\n");
    xf = bpf_map_lookup_elem (& xfis, & z);
    if (!xf) {
        return DP_DROP;
    }
    memset (xf, 0, sizeof *xf);
    dp_parse_d0 (ctx, xf, 0);
    return DP_PASS;
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int xdp_pass_func (struct xdp_md *ctx)" startline="82" endline="85">
int xdp_pass_func (struct xdp_md *ctx)
{
    return dp_ing_pass_main (ctx);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="static int __always_inline tc_packet_func__ (struct  __sk_buff *md)" startline="89" endline="107">
static int __always_inline tc_packet_func__ (struct  __sk_buff *md)
{
    int val = 0;
    struct xfi *xf;
    xf = bpf_map_lookup_elem (& xfis, & val);
    if (!xf) {
        return DP_DROP;
    }
    if (xf->pm.phit & LLB_DP_FC_HIT) {
        memset (xf, 0, sizeof (*xf));
        xf->pm.phit |= LLB_DP_FC_HIT;
    }
    xf->pm.tc = 1;
    return dp_ing_pkt_main (md, xf);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int tc_packet_func_fast (struct  __sk_buff *md)" startline="110" endline="129">
int tc_packet_func_fast (struct  __sk_buff *md)
{

#ifdef HAVE_DP_FC
    struct xfi *xf;
    DP_NEW_FCXF (xf);

#ifdef HAVE_DP_EGR_HOOK
    if (DP_LLB_INGP (md)) {
        return DP_PASS;
    }

#endif
    dp_parse_d0 (md, xf, 0);
    return dp_ing_fc_main (md, xf);

#else
    return tc_packet_func__ (md);

#endif
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int tc_packet_func (struct  __sk_buff *md)" startline="132" endline="135">
int tc_packet_func (struct  __sk_buff *md)
{
    return tc_packet_func__ (md);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int tc_packet_func_slow (struct  __sk_buff *md)" startline="138" endline="149">
int tc_packet_func_slow (struct  __sk_buff *md)
{
    int val = 0;
    struct xfi *xf;
    xf = bpf_map_lookup_elem (& xfis, & val);
    if (!xf) {
        return DP_DROP;
    }
    return dp_ing_ct_main (md, xf);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int tc_packet_func_fw (struct  __sk_buff *md)" startline="152" endline="163">
int tc_packet_func_fw (struct  __sk_buff *md)
{
    int val = 0;
    struct xfi *xf;
    xf = bpf_map_lookup_elem (& xfis, & val);
    if (!xf) {
        return DP_DROP;
    }
    return dp_do_fw_main (md, xf);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int tc_csum_func1 (struct  __sk_buff *md)" startline="166" endline="177">
int tc_csum_func1 (struct  __sk_buff *md)
{
    int val = 0;
    struct xfi *xf;
    xf = bpf_map_lookup_elem (& xfis, & val);
    if (!xf) {
        return DP_DROP;
    }
    return dp_sctp_csum (md, xf);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int tc_csum_func2 (struct  __sk_buff *md)" startline="180" endline="191">
int tc_csum_func2 (struct  __sk_buff *md)
{
    int val = 0;
    struct xfi *xf;
    xf = bpf_map_lookup_elem (& xfis, & val);
    if (!xf) {
        return DP_DROP;
    }
    return dp_sctp_csum (md, xf);
}
</source>
<source file="/home/sayandes/ebpf-projects-annotations/projects/loxilb-ebpf/original_source/kernel/llb_kern_entry.c" funcheader="int tc_slow_unp_func (struct  __sk_buff *md)" startline="194" endline="205">
int tc_slow_unp_func (struct  __sk_buff *md)
{
    int val = 0;
    struct xfi *xf;
    xf = bpf_map_lookup_elem (& xfis, & val);
    if (!xf) {
        return DP_DROP;
    }
    return dp_unparse_packet_always_slow (md, xf);
}
</source>
</doc>
